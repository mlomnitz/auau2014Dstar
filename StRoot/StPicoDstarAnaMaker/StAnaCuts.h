#ifndef StAnaCuts_H
#define StAnaCuts_H

/* **************************************************
 *  Cuts namespace.
 *
 *  Authors:  Mustafa Mustafa (mmustafa@lbl.gov)
 *
 * **************************************************
 */

#include "Rtypes.h"
#include <string>

namespace anaCuts
{
   // path to lists of triggers prescales
   // lists are obtained from http://www.star.bnl.gov/protected/common/common2014/trigger2014/plots_au200gev/
   std::string const prescalesFilesDirectoryName = "./run14AuAu200GeVPrescales";
   //event
   UShort_t const triggerWord = 0x1F; //first five bits see http://rnc.lbl.gov/~xdong/SoftHadron/picoDst.html
   float const vz = 6.0;// cm.
   float const vzVpdVz = 3.0; // 3 cm.
   float const Verror = 1.0e-5; // 
   float const Vrcut = 2.0; // 

   // QA tracks cuts
   float const qaGPt = 0.10;
   int const qaNHitsFit = 20;
   int const qaNHitsDedx = 12;
   float const qaDca = 1.5;
   float const qaEta = 0.4;

   //tracking
   int   const nPtBins = 5;
   float const PtBinsEdge[nPtBins+1] = {0., 1., 2., 3., 5., 15.};//this is for optimaized cut
   //soft part
   float const softPionMinPt = 0.2;
   float const softPionMaxDca = 0.008;

   float const minPt = 0.6;//1.2
   int const nHitsFit = 20;

   //track eta cut
   float const Eta = 1.0;
   //pions
   float const nSigmaPion = 3.0;
   float const pTofBetaDiff = 0.03;
   //kaons
   float const nSigmaKaon = 2.0;
   float const kTofBetaDiff = 0.03;

   float const RapidityCut = 1.0;
//D0 candidate cut// Ultimate1
//   float const dcaV0ToPv[nPtBins] = {0.0062, 0.0047, 0.0040, 0.0041, 0.0042};
//   float const decayLength[nPtBins] = {0.0149, 0.0205, 0.0216, 0.0233, 0.0282};
//   float const cosTheta[nPtBins] = {0.0000, 0.0000, 0.0000, 0.0000, 0.0000};//0.995
//   float const dcaDaughters[nPtBins] = {0.0082, 0.0070, 0.0056, 0.0065, 0.0065}; //0.0050;
//   float const kDca[nPtBins] = {0.0123, 0.0097, 0.0091, 0.0075, 0.0053};//0.008, // minimum
//   float const pDca[nPtBins] = {0.0109, 0.0108, 0.0100, 0.0074, 0.0067};//0.008

   //D0 candidate cut// Ultimate2
   float const dcaV0ToPv[nPtBins] = {0.0061, 0.0049, 0.0038, 0.0038, 0.0040};
   float const decayLength[nPtBins] = {0.0145, 0.0181, 0.0212, 0.0247, 0.0259};
   float const cosTheta[nPtBins] = {0.0000, 0.0000, 0.0000, 0.0000, 0.0000};//0.995
   float const dcaDaughters[nPtBins] = {0.0084, 0.0066, 0.0057, 0.0050, 0.0060}; //0.0050;
   float const kDca[nPtBins] = {0.0103, 0.0091, 0.0095, 0.0079, 0.0058};//0.008, // minimum
   float const pDca[nPtBins] = {0.0110, 0.0111, 0.0086, 0.0081, 0.0062};//0.008
   //Dstar candidate cuts
   float const dstarMinMass = 0.115;
   float const dstarMaxMass = 0.175;
   float const daughterD0MaxMass[nPtBins] = { 1.90, 1.893, 1.908, 1.920, 1.904 };
   float const daughterD0MinMass[nPtBins] = { 1.82, 1.833, 1.823, 1.815, 1.819 };
   //next are mostly for QA parts, Dca and HFT ratio
   int const nParticles=2;
   char const ParticleName[nParticles][256]={"Pion","Kaon"};
   int const nEtas=10;
   float const EtaEdge[nEtas+1]={-1.0, -0.8, -0.6, -0.4, -0.2, 0.0, 0.2, 0.4 ,0.6, 0.8, 1.0};
   int const nPhis=30;
   float const PhiEdge[nPhis+1]= {
  -3.14159 ,-2.93215 ,-2.72271 ,-2.51327 ,-2.30383 ,-2.0944 ,-1.88496 ,-1.67552 ,-1.46608 ,-1.25664 ,-1.0472 ,-0.837758 ,-0.628319 ,-0.418879 ,-0.20944 ,0.0 ,0.20944 ,0.418879 ,0.628319 ,0.837758 ,1.0472 ,1.25664 ,1.46608 ,1.67552 ,1.88496 ,2.0944 ,2.30383 ,2.51327 ,2.72271 ,2.93215 ,3.14159 
                                };
   int const nVzs=6;
   float const VzEdge[nVzs+1]={-6., -4., -2.,  0., 2.,  4.,  6.};
   int const nCents=10;
   float const CentEdge[nCents+1]={-1.5, -0.5, 0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5};
   int const nZdcxs=11;
   float const ZdcxEdge[nZdcxs+1]={0., 10., 20., 30., 35., 40., 45., 50., 55., 60., 80., 100.0 };
   int const nPts=52;
   float const PtEdge[nPts+1]= {
                            0. ,0.1 ,0.2 ,0.3 ,0.4 ,0.5 ,0.6 ,0.7 ,0.8 ,0.9 ,
                            1. ,1.1 ,1.2 ,1.3 ,1.4 ,1.5 ,1.6 ,1.7 ,1.8 ,1.9 ,
                            2. ,2.2 ,2.4 ,2.6 ,2.8 ,3.0 ,3.2 ,3.4 ,3.6 ,3.8 ,
                            4. ,4.2 ,4.4 ,4.6 ,4.8 ,5.0 ,5.2 ,5.4 ,5.6 ,5.8 ,
                            6. ,6.5 ,7.0 ,7.5 ,8.0 ,8.5 ,9.0 ,9.5 ,10. ,10.5, 
                            11.0 ,11.5 ,12.0 
                              };
   
   int const nDcas=380;
   float const DcaEdge[nDcas+1]= {
-1.0 ,-0.99 ,-0.98 ,-0.97 ,-0.96 ,-0.95 ,-0.94 ,-0.93 ,-0.92 ,-0.91 ,-0.9 ,-0.89 ,-0.88 ,-0.87 ,-0.86 ,-0.85 ,-0.84 ,-0.83 ,-0.82 ,-0.81 ,-0.8 ,-0.79 ,-0.78 ,-0.77 ,-0.76 ,-0.75 ,-0.74 ,-0.73 ,-0.72 ,-0.71 ,-0.7 ,-0.69 ,-0.68 ,-0.67 ,-0.66 ,-0.65 ,-0.64 ,-0.63 ,-0.62 ,-0.61 ,-0.6 ,-0.59 ,-0.58 ,-0.57 ,-0.56 ,-0.55 ,-0.54 ,-0.53 ,-0.52 ,-0.51 ,-0.5 ,-0.49 ,-0.48 ,-0.47 ,-0.46 ,-0.45 ,-0.44 ,-0.43 ,-0.42 ,-0.41 ,-0.4 ,-0.39 ,-0.38 ,-0.37 ,-0.36 ,-0.35 ,-0.34 ,-0.33 ,-0.32 ,-0.31 ,-0.3 ,-0.29 ,-0.28 ,-0.27 ,-0.26 ,-0.25 ,-0.24 ,-0.23 ,-0.22 ,-0.21 ,-0.2 ,-0.19 ,-0.18 ,-0.17 ,-0.16 ,-0.15 ,-0.14 ,-0.13 ,-0.12 ,-0.11 ,// 90
-0.1 ,-0.099 ,-0.098 ,-0.097 ,-0.096 ,-0.095 ,-0.094 ,-0.093 ,-0.092 ,-0.091 ,-0.09 ,-0.089 ,-0.088 ,-0.087 ,-0.086 ,-0.085 ,-0.084 ,-0.083 ,-0.082 ,-0.081 ,-0.08 ,-0.079 ,-0.078 ,-0.077 ,-0.076 ,-0.075 ,-0.074 ,-0.073 ,-0.072 ,-0.071 ,-0.07 ,-0.069 ,-0.068 ,-0.067 ,-0.066 ,-0.065 ,-0.064 ,-0.063 ,-0.062 ,-0.061 ,-0.06 ,-0.059 ,-0.058 ,-0.057 ,-0.056 ,-0.055 ,-0.054 ,-0.053 ,-0.052 ,-0.051 ,-0.05 ,-0.049 ,-0.048 ,-0.047 ,-0.046 ,-0.045 ,-0.044 ,-0.043 ,-0.042 ,-0.041 ,-0.04 ,-0.039 ,-0.038 ,-0.037 ,-0.036 ,-0.035 ,-0.034 ,-0.033 ,-0.032 ,-0.031 ,-0.03 ,-0.029 ,-0.028 ,-0.027 ,-0.026 ,-0.025 ,-0.024 ,-0.023 ,-0.022 ,-0.021 ,-0.02 ,-0.019 ,-0.018 ,-0.017 ,-0.016 ,-0.015 ,-0.014 ,-0.013 ,-0.012 ,-0.011 ,-0.01 ,-0.009 ,-0.008 ,-0.007 ,-0.006 ,-0.005 ,-0.004 ,-0.003 ,-0.002 ,-0.001 ,0.0 ,0.001 ,0.002 ,0.003 ,0.004 ,0.005 ,0.006 ,0.007 ,0.008 ,0.009 ,0.01 ,0.011 ,0.012 ,0.013 ,0.014 ,0.015 ,0.016 ,0.017 ,0.018 ,0.019 ,0.02 ,0.021 ,0.022 ,0.023 ,0.024 ,0.025 ,0.026 ,0.027 ,0.028 ,0.029 ,0.03 ,0.031 ,0.032 ,0.033 ,0.034 ,0.035 ,0.036 ,0.037 ,0.038 ,0.039 ,0.04 ,0.041 ,0.042 ,0.043 ,0.044 ,0.045 ,0.046 ,0.047 ,0.048 ,0.049 ,0.05 ,0.051 ,0.052 ,0.053 ,0.054 ,0.055 ,0.056 ,0.057 ,0.058 ,0.059 ,0.06 ,0.061 ,0.062 ,0.063 ,0.064 ,0.065 ,0.066 ,0.067 ,0.068 ,0.069 ,0.07 ,0.071 ,0.072 ,0.073 ,0.074 ,0.075 ,0.076 ,0.077 ,0.078 ,0.079 ,0.08 ,0.081 ,0.082 ,0.083 ,0.084 ,0.085 ,0.086 ,0.087 ,0.088 ,0.089 ,0.09 ,0.091 ,0.092 ,0.093 ,0.094 ,0.095 ,0.096 ,0.097 ,0.098 ,0.099 ,0.1 ,//201
0.11 ,0.12 ,0.13 ,0.14 ,0.15 ,0.16 ,0.17 ,0.18 ,0.19 ,0.2 ,0.21 ,0.22 ,0.23 ,0.24 ,0.25 ,0.26 ,0.27 ,0.28 ,0.29 ,0.3 ,0.31 ,0.32 ,0.33 ,0.34 ,0.35 ,0.36 ,0.37 ,0.38 ,0.39 ,0.4 ,0.41 ,0.42 ,0.43 ,0.44 ,0.45 ,0.46 ,0.47 ,0.48 ,0.49 ,0.5 ,0.51 ,0.52 ,0.53 ,0.54 ,0.55 ,0.56 ,0.57 ,0.58 ,0.59 ,0.6 ,0.61 ,0.62 ,0.63 ,0.64 ,0.65 ,0.66 ,0.67 ,0.68 ,0.69 ,0.7 ,0.71 ,0.72 ,0.73 ,0.74 ,0.75 ,0.76 ,0.77 ,0.78 ,0.79 ,0.8 ,0.81 ,0.82 ,0.83 ,0.84 ,0.85 ,0.86 ,0.87 ,0.88 ,0.89 ,0.9 ,0.91 ,0.92 ,0.93 ,0.94 ,0.95 ,0.96 ,0.97 ,0.98 ,0.99 ,1.0 //90
                                };                                   

}
#endif
